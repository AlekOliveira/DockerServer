#!/bin/bash

composer clearcache
composer config -g -a http-basic.repo.magento.com 0727661ff0ee0a420843a8fc16f4b9ff a5910cf1f1945e3f5212e5b000bed311
composer create-project --repository=https://repo.magento.com/ magento/project-community-edition .

MYSQL_HOST=mariadb
MYSQL_DATABASE=magento
MYSQL_USER=root
MYSQL_PASSWORD='root'

MAGENTO_BASE_DIR=/var/www/magento2.local
MAGENTO_LANGUAGE=pt_BR
MAGENTO_TIMEZONE=America/Sao_Paulo
MAGENTO_DEFAULT_CURRENCY=BRL
MAGENTO_URL=https://magento2.local
MAGENTO_BACKEND_FRONTNAME=admin
MAGENTO_USE_SECURE=1
MAGENTO_BASE_URL_SECURE=https://magento2.local
MAGENTO_USE_SECURE_ADMIN=1
MAGENTO_ADMIN_FIRSTNAME=Acc
MAGENTO_ADMIN_LASTNAME=Admin
MAGENTO_ADMIN_EMAIL=alexandre.cardozo1@gmail.com
MAGENTO_ADMIN_USERNAME=admin
MAGENTO_ADMIN_PASSWORD='@Cytros123'

SEARCH_ENGINE='elasticsearch7'
ELASTICSEARCH_HOSTNAME='elasticsearch'

AMQP_HOST=rabbitmq
AMQP_USER=rabbitmq
AMQP_PASS=rabbitmq
AMQP_PORT=5672
AMQP_VIRTUALHOST=/

COMPOSER_HOME=/var/www/.composer
STORE_NAME="Magento Store"
STORE_EMAIL=alexandre.cardozo1@gmail.com

php bin/magento setup:install --base-url=${MAGENTO_URL} \
 --backend-frontname=${MAGENTO_BACKEND_FRONTNAME} \
 --db-host=${MYSQL_HOST} \
 --db-name=${MYSQL_DATABASE} \
 --db-user=${MYSQL_USER} \
 --db-password=${MYSQL_PASSWORD} \
 --use-secure=${MAGENTO_USE_SECURE} \
 --base-url-secure=${MAGENTO_BASE_URL_SECURE}  \
 --use-secure-admin=${MAGENTO_USE_SECURE_ADMIN} \
 --use-rewrites=1 \
 --admin-firstname=${MAGENTO_ADMIN_FIRSTNAME} \
 --admin-lastname=${MAGENTO_ADMIN_LASTNAME} \
 --admin-email=${MAGENTO_ADMIN_EMAIL} \
 --admin-user=${MAGENTO_ADMIN_USERNAME} \
 --admin-password=${MAGENTO_ADMIN_PASSWORD} \
 --amqp-host="${AMQP_HOST}" \
 --amqp-port="${AMQP_PORT}" \
 --amqp-user="${AMQP_USER}" \
 --amqp-password="${AMQP_PASS}" \
 --amqp-virtualhost="${AMQP_VIRTUALHOST}" \
 --elasticsearch-host=elasticsearch

php bin/magento maintenance:enable

yes | php bin/magento setup:config:set --cache-backend=redis --cache-backend-redis-server=redis --cache-backend-redis-db=0
yes | php bin/magento setup:config:set --page-cache=redis --page-cache-redis-server=redis --page-cache-redis-db=1
yes | php bin/magento setup:config:set --session-save=redis --session-save-redis-host=redis --session-save-redis-log-level=3 --session-save-redis-db=2
php bin/magento deploy:mode:set developer

#Disable unused modules
#php bin/magento module:disable Amazon_Core Amazon_Login Amazon_Payment
#php bin/magento module:disable Klarna_KpGraphQl Klarna_Onsitemessaging Klarna_Core Klarna_Ordermanagement Klarna_Kp
#php bin/magento module:disable Vertex_AddressValidation Vertex_Tax
#php bin/magento module:disable Magento_Authorizenet Magento_AuthorizenetGraphQl Magento_AuthorizenetAcceptjs Magento_AuthorizenetCardinal
#php bin/magento module:disable Magento_BraintreeGraphQl Magento_Braintree
#php bin/magento module:disable Magento_Marketplace
#php bin/magento module:disable Magento_NewRelicReporting
php bin/magento module:disable Magento_TwoFactorAuth
#php bin/magento module:disable Magento_Ups
#php bin/magento module:disable Magento_Usps
#php bin/magento module:disable Dotdigitalgroup_Sms Dotdigitalgroup_Chat Dotdigitalgroup_Email

#Store configs
php bin/magento config:set general/store_information/name "${STORE_NAME}"
php bin/magento config:set general/store_information/country_id BR
php bin/magento config:set general/store_information/region_id 508
php bin/magento config:set general/country/default BR
php bin/magento config:set general/locale/weight_unit kgs

php bin/magento config:set web/cookie/cookie_lifetime 86400

php bin/magento config:set catalog/search/engine ${SEARCH_ENGINE}
php bin/magento config:set catalog/search/elasticsearch7_server_hostname ${ELASTICSEARCH_HOSTNAME}
php bin/magento config:set catalog/custom_options/use_calendar 1
php bin/magento config:set catalog/custom_options/date_fields_order d,m,y
php bin/magento config:set catalog/custom_options/time_format 24h
php bin/magento config:set catalog/frontend/flat_catalog_category 1
php bin/magento config:set catalog/frontend/flat_catalog_product 1

php bin/magento config:set persistent/options/enabled 1

#SEO
php bin/magento config:set dev/js/merge_files 1
php bin/magento config:set dev/js/enable_js_bundling 1
php bin/magento config:set dev/js/minify_files 1
php bin/magento config:set dev/css/merge_css_files 1
php bin/magento config:set dev/css/minify_files 1
php bin/magento config:set web/seo/use_rewrites 1

#Email confis
php bin/magento config:set contact/email/recipient_email "${STORE_EMAIL}"
php bin/magento config:set trans_email/ident_general/name "${STORE_NAME}"
php bin/magento config:set trans_email/ident_general/email "${STORE_EMAIL}"
php bin/magento config:set trans_email/ident_sales/name "Vendas"
php bin/magento config:set trans_email/ident_sales/email "${STORE_EMAIL}"
php bin/magento config:set trans_email/ident_support/name "SAC"
php bin/magento config:set trans_email/ident_support/email "${STORE_EMAIL}"
php bin/magento config:set trans_email/ident_custom1/name "${STORE_NAME}"
php bin/magento config:set trans_email/ident_custom1/email "${STORE_EMAIL}"
php bin/magento config:set trans_email/ident_custom1/name "${STORE_NAME}"
php bin/magento config:set trans_email/ident_custom2/email "${STORE_EMAIL}"

#Customer configs
php bin/magento config:set customer/create_account/email_domain ${STORE_EMAIL}
php bin/magento config:set customer/create_account/vat_frontend_visibility 1
php bin/magento config:set customer/address/street_lines 4
php bin/magento config:set customer/address/company_show 0

#Shipping Origin confis
php bin/magento config:set shipping/origin/country_id BR
php bin/magento config:set shipping/origin/region_id 508
php bin/magento config:set shipping/origin/postcode "01001-010"
php bin/magento config:set shipping/origin/city "SÃ£o Paulo"

#Admin configs
php bin/magento config:set admin/security/session_lifetime 86400
php bin/magento config:set admin/security/password_lifetime 0
php bin/magento config:set admin/dashboard/enable_charts 1
php bin/magento config:set admin/usage/enabled 0

#DEV only
php bin/magento config:set dev/front_end_development_workflow/type client_side_compilation
php bin/magento config:set dev/js/merge_files 0
php bin/magento config:set dev/js/enable_js_bundling 0
php bin/magento config:set dev/js/minify_files 0
php bin/magento config:set dev/css/merge_css_files 0
php bin/magento config:set dev/css/minify_files 0
php bin/magento config:set dev/static/sign 0
php bin/magento config:set admin/security/admin_account_sharing 1

php bin/magento setup:upgrade
php bin/magento setup:di:compile
php bin/magento cache:clean
php bin/magento cache:flush

php bin/magento cron:install --force

php bin/magento cache:enable
php bin/magento maintenance:disable

#For production only
#php bin/magento deploy:mode:set production

#Update Script
#php bin/magento setup:upgrade
#php bin/magento setup:di:compile
#php bin/magento setup:static-content:deploy -f pt_BR en_US
#php bin/magento cache:clean
#php bin/magento cache:flush


----------------------------------
Install docker
Install docker compose
Clone LEMP repo

#Environment Up & Shell
sudo service docker start
docker-compose up -d (LEMP dir)
docker-compose down
docker-compose exec --user www-data php74-fpm bash

#Install
zsh
omyzsh
https://docs.docker.com/compose/completion/
